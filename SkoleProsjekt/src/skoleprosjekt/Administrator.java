/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package skoleprosjekt;

import Kode.Database;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;



/**
 * Administrator - class for an administrator after login
 * @author Sondre
 */
public class Administrator extends javax.swing.JFrame {
    private int chosenUserID;
    private String NAVN;
    private DefaultListModel DLM;
    private String brukernavn;
    private ResultSet res;
    private Database db = new Database();
    private ArrayList<Integer> userIDs = new ArrayList();
    private ArrayList<Integer> centreIDs = new ArrayList();
    private int centreID;
    
    /**
     * Creates new form Administrator
     */
    public Administrator() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        jFrame2.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        jFrame3.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        regUserFrame.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        db.createView();
        fyllYrke();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regUserFrame = new javax.swing.JFrame();
        nameInputField = new javax.swing.JTextField();
        usernameInputField = new javax.swing.JTextField();
        pwInputField = new javax.swing.JTextField();
        phoneInputField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        emailInputField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        chooseUserComboBox = new javax.swing.JComboBox();
        ChooseCentreComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jFrame2 = new javax.swing.JFrame();
        searchUsersField = new javax.swing.JTextField();
        Tekstlytter f = new Tekstlytter(); searchUsersField.getDocument().addDocumentListener(f);
        userTypeBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jFrame3 = new javax.swing.JFrame();
        UserName = new javax.swing.JLabel();
        IDLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        UsernameTextField = new javax.swing.JTextField();
        PasswordTextField = new javax.swing.JTextField();
        PhonenumberTextField = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        EditName = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        regUserButton = new javax.swing.JButton();
        editUserButton = new javax.swing.JButton();

        regUserFrame.setTitle("Register New User");
        regUserFrame.setMinimumSize(new java.awt.Dimension(250, 420));
        regUserFrame.setResizable(false);

        jLabel4.setText("Name");

        jLabel5.setText("Username");

        jLabel7.setText("Password");

        jLabel8.setText("Phonenumber");

        jLabel9.setText("Email");

        submitButton.setBackground(new java.awt.Color(51, 204, 0));
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        chooseUserComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose user", "centremanager", "storeowner", "serviceworker" }));
        chooseUserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseUserComboBoxActionPerformed(evt);
            }
        });

        ChooseCentreComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Centre" }));
        ChooseCentreComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ChooseCentreComboBoxMousePressed(evt);
            }
        });

        javax.swing.GroupLayout regUserFrameLayout = new javax.swing.GroupLayout(regUserFrame.getContentPane());
        regUserFrame.getContentPane().setLayout(regUserFrameLayout);
        regUserFrameLayout.setHorizontalGroup(
            regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regUserFrameLayout.createSequentialGroup()
                .addGroup(regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ChooseCentreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(regUserFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9))
                            .addGroup(regUserFrameLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(phoneInputField, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(emailInputField)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(pwInputField)
                                    .addComponent(usernameInputField)
                                    .addComponent(nameInputField)))))
                    .addGroup(regUserFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chooseUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(regUserFrameLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        regUserFrameLayout.setVerticalGroup(
            regUserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regUserFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooseUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChooseCentreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addComponent(nameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(usernameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(pwInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel8)
                .addGap(6, 6, 6)
                .addComponent(phoneInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel2.setText("jLabel2");

        jLabel6.setText("jLabel6");

        jFrame2.setTitle("Choose User");
        jFrame2.setMinimumSize(new java.awt.Dimension(525, 384));
        jFrame2.setResizable(false);

        userTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Users" }));
        userTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTypeBoxActionPerformed(evt);
            }
        });

        jList1.setMinimumSize(new java.awt.Dimension(525, 384));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                brukerValgt(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addComponent(searchUsersField, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userTypeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userTypeBox)
                    .addComponent(searchUsersField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        jFrame3.setTitle("Edit User");
        jFrame3.setMinimumSize(new java.awt.Dimension(240, 435));

        UserName.setText("Brukernavn");

        IDLabel.setText("ID");

        jLabel12.setText("Name");

        jLabel13.setText("Username");

        jLabel14.setText("Password");

        jLabel15.setText("Phonenumber");

        jLabel16.setText("Email");

        NameTextField.setText("jTextField9");

        UsernameTextField.setText("jTextField9");

        PasswordTextField.setText("jTextField9");

        PhonenumberTextField.setText("jTextField9");

        EmailTextField.setText("jTextField9");

        EditName.setBackground(new java.awt.Color(51, 153, 0));
        EditName.setText("Save");
        EditName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditNameActionPerformed(evt);
            }
        });

        DeleteButton.setBackground(new java.awt.Color(255, 0, 0));
        DeleteButton.setText("Delete user");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame3Layout.createSequentialGroup()
                        .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IDLabel)
                            .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13)
                                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EmailTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(jFrame3Layout.createSequentialGroup()
                        .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addGroup(jFrame3Layout.createSequentialGroup()
                                .addComponent(UserName)
                                .addGap(40, 40, 40)
                                .addComponent(DeleteButton))
                            .addGroup(jFrame3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(EditName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UserName)
                    .addComponent(DeleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDLabel)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PhonenumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EditName)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Users");

        regUserButton.setText("Register New User");
        regUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regUserButtonActionPerformed(evt);
            }
        });

        editUserButton.setText("Edit Existing User");
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(regUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editUserButton)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regUserButton)
                    .addComponent(editUserButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regUserButtonActionPerformed
        showRegWindow();
    }//GEN-LAST:event_regUserButtonActionPerformed

    public void showRegWindow(){
        regUserFrame.setVisible(true);
        ChooseCentreComboBox.setEnabled(false);
        fyllCentre();   
    }
    
    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
       showEditWindow();
    }//GEN-LAST:event_editUserButtonActionPerformed

    public void showEditWindow(){
        jFrame2.setVisible(true);
        fyllBrukere(null);
    }
    private void userTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTypeBoxActionPerformed
        fyllBrukere(null);
    }//GEN-LAST:event_userTypeBoxActionPerformed

    private void chooseUserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseUserComboBoxActionPerformed
        int a = chooseUserComboBox.getSelectedIndex();
        
        if(a == 1){
            ChooseCentreComboBox.setEnabled(false);    
        }      
        if (a == 2){
            ChooseCentreComboBox.setEnabled(true);
        }
        if(a == 3){
            ChooseCentreComboBox.setEnabled(true);  
        }
                
    }//GEN-LAST:event_chooseUserComboBoxActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        regNewUser();
    }//GEN-LAST:event_submitButtonActionPerformed

    public void regNewUser(){
        if (chooseUserComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Please choose a user type");
        }  
        else {
            addUser();
            regUserFrame.dispose();
        }
    }
        
    private void brukerValgt(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_brukerValgt
        if (!evt.getValueIsAdjusting()) {
            brukernavn = jList1.getSelectedValue().toString();
            chosenUserID = userIDs.get(jList1.getSelectedIndex());
            jFrame3.setVisible(true);
            UserName.setText(brukernavn);
            fyllEksisterendeBruker();
        }
    }//GEN-LAST:event_brukerValgt

    private void EditNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditNameActionPerformed
         saveEditedUser();
    }//GEN-LAST:event_EditNameActionPerformed

    public void saveEditedUser(){
        String nr = ""+chosenUserID;
        int id1 = Character.getNumericValue(nr.charAt(0));
        
        try{
            Statement setning = db.kobleTil().createStatement();
            
            String user = UsernameTextField.getText();
            String pass = PasswordTextField.getText();
            String name1 = NameTextField.getText();
            int phone = Integer.parseInt(PhonenumberTextField.getText());
            String mail = EmailTextField.getText();
            String userType = "";
            
            if (user.isEmpty() || pass.isEmpty() || name1.isEmpty() || mail.isEmpty()) {
                JOptionPane.showMessageDialog(null,"Please fill in empty fields");
                return;
            }
            
            if(id1 == 1) {
                userType = "Update centremanager set centremanager_name = '"+ name1 +"', username = '"+ user +"', "
                    + "password = '"+pass+"', phonenumber = "+phone+", email = '"+mail+"' where manager_id = "+chosenUserID+"  ";
            }
            if(id1 == 2) {
                userType = "Update storeowner set owner_name = '"+name1+"', username = '"+ user +"', "
                    + "password = '"+pass+"', phonenumber = "+phone+", email = '"+mail+"' where owner_id = "+chosenUserID+" ";
            }
            if(id1 == 3) {
                userType = "Update serviceworker set serviceworker_name = "+name1+", username = '"+ user +"', "
                    + "password = '"+pass+"', phonenumber = "+phone+", email = '"+mail+"' where serviceworker_id = "+chosenUserID+"";
            }
            
            System.out.println(userType);
            setning.executeUpdate(userType);
            NAVN = name1;
            UserName.setText(name1);
            
            jFrame3.setVisible(false);
            db.kobleFra();  
        }catch(Exception e){
            System.out.println(e);
            db.kobleFra();
        }                                       
    }
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        deleteUser();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    public void deleteUser(){
        try{

            Statement setning = db.kobleTil().createStatement();
            if((""+chosenUserID).charAt(0) == '1'){
                setning.executeUpdate("delete from centremanager where manager_id = "+ chosenUserID);
            }
            if((""+chosenUserID).charAt(0) == '2'){
                setning.executeUpdate("delete from storeowner where owner_id = "+ chosenUserID);
            }
            if((""+chosenUserID).charAt(0) == '3'){
                setning.executeUpdate("delete from serviceworker where serviceworker_id = "+ chosenUserID);
            }
            db.kobleFra();
        }catch(Exception e){
            System.out.println(e);
            db.kobleFra();
        } finally{
            jFrame3.setVisible(false);
            fyllBrukere(null);
            fyllCentre();
        }
    }
    private void ChooseCentreComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChooseCentreComboBoxMousePressed
        centreID = centreIDs.get(ChooseCentreComboBox.getSelectedIndex());
    }//GEN-LAST:event_ChooseCentreComboBoxMousePressed
    
     /**
     * Method to fill a ComboBox with shoppingcentres from the database. 
     * @return - No return
     */
    private void fyllCentre(){
        try{
            Statement setning = db.kobleTil().createStatement();
            res = setning.executeQuery("select centre_name, centre_id from shoppingcentre");
            DefaultComboBoxModel x = new DefaultComboBoxModel();
            centreIDs.clear();
            while(res.next()){            
                String name = res.getString("centre_name");
                centreIDs.add(res.getInt("centre_id"));
                x.addElement(name);
            }
            ChooseCentreComboBox.setModel(x);
            
            
            db.kobleFra();
        }catch(Exception e){
            System.out.println(e);
        }
        db.kobleFra();
    }
    
    /**
     * Method to fill an existing user from the database into JTextFields. 
     * 
     */
    public void fyllEksisterendeBruker(){
    try{
            
            Statement setning = db.kobleTil().createStatement();
            db.createView();
            res = setning.executeQuery("select username, password, id, name, phonenumber, email from allebrukere where id = " + chosenUserID);
            res.next();
            chosenUserID = Integer.parseInt(res.getString("id"));
            IDLabel.setText("ID: "+res.getString("id"));
            NAVN = res.getString("name");
            UsernameTextField.setText(res.getString("username"));
            PasswordTextField.setText(res.getString("password"));
            NameTextField.setText(res.getString("name"));
            PhonenumberTextField.setText(res.getString("phonenumber"));
            EmailTextField.setText(res.getString("email"));
            db.destroyView();
            db.kobleFra();
        }catch(Exception e){
            System.out.println(e);
            db.destroyView();
            db.kobleFra();
        }
    }
    
    
     /**
     * Method to add a user to the database.
     */
    
    private void addUser(){        
        int userID;

        String name = nameInputField.getText();
        String username = usernameInputField.getText();
        String password = pwInputField.getText();
        int phonenumber = Integer.parseInt(phoneInputField.getText());
        String email = emailInputField.getText();
        String centreName = "";       
        
        try {
            Statement setning = db.kobleTil().createStatement();                                   
            
            if(chooseUserComboBox.getSelectedIndex() == 1){
                setning.executeUpdate("insert into centremanager(centremanager_name"
                        + ", USERNAME, PASSWORD, PHONENUMBER, EMAIL) VALUES( '"
                        + name + "', '" + username + "', '" + password + "', "
                        + phonenumber + ", '" +email +"')", Statement.RETURN_GENERATED_KEYS);
                res = setning.getGeneratedKeys();
                userID = 0;
                if (res.next()) {
                    userID = res.getInt(1);
                }
                
                centreName = JOptionPane.showInputDialog("Venligst lag ett midlertidig navn på senteret");
                setning.executeUpdate("insert into shoppingcentre("
                        + "Manager_ID, centre_name) values("
                        +userID+", '"+centreName+"')", Statement.RETURN_GENERATED_KEYS);
                
                //parking lot
                res = setning.getGeneratedKeys();
                centreID = 0;
                if (res.next()) {
                    centreID = res.getInt(1);
                }
                setning.executeUpdate("insert into parkinglot(centre_id)values("+centreID+")");
            }
            
            if(chooseUserComboBox.getSelectedIndex() == 2){
                setning.executeUpdate("insert into storeowner (owner_name,"
                        + " USERNAME, PASSWORD, PHONENUMBER, EMAIL)"
                        + " VALUES( '" + name + "', '" + username
                        + "', '" + password + "', " +phonenumber
                        + ", '" +email +"')", Statement.RETURN_GENERATED_KEYS);
                
                res = setning.getGeneratedKeys();
                userID = 0;
                if (res.next()) {
                    userID = res.getInt(1);
                }
                
                String storeName = JOptionPane.showInputDialog("Vennligst lag ett midlertidig navn på butikken");
                setning.executeUpdate("insert into store(centre_id, owner_id,"
                        + " store_name) values("+centreID+", "+userID+","
                        + " '"+storeName+"' )");
            }
           
            if(chooseUserComboBox.getSelectedIndex() == 3){
                setning.executeUpdate("insert into serviceworker(serviceworker_name, "
                        + "USERNAME, PASSWORD, PHONENUMBER, EMAIL) VALUES( '"
                        + name + "', '" + username + "', '" + password + 
                        "', " +phonenumber + ", '" +email +"')", Statement.RETURN_GENERATED_KEYS);
                
                res = setning.getGeneratedKeys();
                userID = 0;
                if (res.next()) {
                    userID = res.getInt(1);
                }
                centreID = centreIDs.get(ChooseCentreComboBox.getSelectedIndex());
                res = setning.executeQuery("select servicecentre_id from servicecentre "
                        + "where centre_id = "+centreID+"");
                res.next();
                int servicecentreID = res.getInt("servicecentre_id");
                setning.executeUpdate("update serviceworker set servicecentre_id = "
                        +servicecentreID+" where serviceworker_id = "+userID);
            }
           
            fyllCentre();           
        }catch(Exception r){
            System.out.println("Feil med adduser del 2" + r);   
        }
        db.kobleFra();
    }
     
    
     /**
     * Method to fill users from the database into a JList in the program. 
     */
    private void fyllBrukere(String søkeOrd){
        try{
            
            Statement setning = db.kobleTil().createStatement();
            db.createView();
            DLM = new DefaultListModel();                       
            
            userIDs.clear();
            
            int minID = 0;
            int maksID = 3999;
            
            if (userTypeBox.getSelectedIndex() == 1) {
                minID = 1000;
                maksID = 1999;
            }
            if (userTypeBox.getSelectedIndex() == 2) {
                minID = 2000;
                maksID = 2999;
            }
            if (userTypeBox.getSelectedIndex() == 3) {
                minID = 3000;
                maksID = 3999;
            }
            
            if (søkeOrd == null) {

                res = setning.executeQuery("select name, ID from allebrukere where id between " + minID + " and " + maksID);
            }
            else {
                res = setning.executeQuery("select name, id from allebrukere"
                    + " where UPPER(name) LIKE '"+søkeOrd.toUpperCase()+"%'"
                        + "and id between " + minID + " and " + maksID);
            }

            while(res.next()){
                String navn = res.getString("name");
                userIDs.add(res.getInt("id"));
                DLM.addElement(navn);
            }
            
            jList1.setModel(DLM);
            db.destroyView();
            db.kobleFra();
            
        } catch (Exception e) {
           System.out.println("En feil oppstod tilknyttet metoden fyllBrukere" + e + "");
           db.destroyView();
            db.kobleFra();
        }
    }
    
    
     /**
     * Method to get profession from the database and add to the program. 
     */
    private void fyllYrke(){
        String[] yrkeliste = {"CentreManager", "StoreOwner", "ServiceWorker"};
        //jComboBox1.removeAllItems();
        for(int i = 0; i < yrkeliste.length; i++){
            String navn1 = yrkeliste[i];
            userTypeBox.addItem(navn1);     
        }
    }
    /**
     */
    public void run(){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ChooseCentreComboBox;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditName;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JTextField PasswordTextField;
    private javax.swing.JTextField PhonenumberTextField;
    private javax.swing.JLabel UserName;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JComboBox chooseUserComboBox;
    private javax.swing.JButton editUserButton;
    private javax.swing.JTextField emailInputField;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameInputField;
    private javax.swing.JTextField phoneInputField;
    private javax.swing.JTextField pwInputField;
    private javax.swing.JButton regUserButton;
    private javax.swing.JFrame regUserFrame;
    private javax.swing.JTextField searchUsersField;
    private javax.swing.JButton submitButton;
    private javax.swing.JComboBox userTypeBox;
    private javax.swing.JTextField usernameInputField;
    // End of variables declaration//GEN-END:variables
class Tekstlytter implements DocumentListener{
    
        @Override
        public void insertUpdate(DocumentEvent e) {
            String søkeOrd = "";
            try {
                søkeOrd = e.getDocument().getText(0, e.getOffset()+1);
            } catch (BadLocationException ex) {
                Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            fyllBrukere(søkeOrd);
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            String søkeOrd = "";
            try {
                søkeOrd = e.getDocument().getText(0, e.getOffset()+1);
            } catch (BadLocationException ex) {
                Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            fyllBrukere(søkeOrd);
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
    }
}



