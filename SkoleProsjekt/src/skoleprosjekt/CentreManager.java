/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package skoleprosjekt;

import Kode.Database;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sjur
 */
public class CentreManager extends javax.swing.JFrame {
    private ResultSet res;
    private Database db = new Database();
    private int centreId;
    private String username;
    private String centreName;
    
    public CentreManager(String username) {
        try{
            this.username = username;
            Statement stmt = db.kobleTil().createStatement();
            res = stmt.executeQuery("select manager_id from centremanager where username = '" + username +"'");
            res.next();
            int x = res.getInt("manager_id");
            res = stmt.executeQuery("select centre_id from shoppingcentre where manager_id = " + x + "");
            res.next();
            
            centreId = res.getInt("Centre_id");
            initComponents();
            
            res = stmt.executeQuery("select centre_name from shoppingcentre where centre_id = " + centreId +"");
            res.next();
            centreName = res.getString("centre_name");
            loadValues(); 
                   
        }
        
        catch(Exception e ){
            System.out.println(e);
       }
    }
    
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseStoreOwner = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        centreInfoBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeList = new javax.swing.JList();
        addStoreBrn = new javax.swing.JButton();
        removeStoreBtn = new javax.swing.JButton();
        centreNameLbl = new javax.swing.JLabel();

        chooseStoreOwner.setMinimumSize(new java.awt.Dimension(100, 200));

        jLabel1.setText("Choose store owner");

        javax.swing.GroupLayout chooseStoreOwnerLayout = new javax.swing.GroupLayout(chooseStoreOwner.getContentPane());
        chooseStoreOwner.getContentPane().setLayout(chooseStoreOwnerLayout);
        chooseStoreOwnerLayout.setHorizontalGroup(
            chooseStoreOwnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseStoreOwnerLayout.createSequentialGroup()
                .addGroup(chooseStoreOwnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chooseStoreOwnerLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(chooseStoreOwnerLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        chooseStoreOwnerLayout.setVerticalGroup(
            chooseStoreOwnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseStoreOwnerLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        centreInfoBox.setText("jTextField1");

        storeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                storeListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(storeList);

        addStoreBrn.setText("Add");
        addStoreBrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStoreBrnActionPerformed(evt);
            }
        });

        removeStoreBtn.setText("Remove");
        removeStoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStoreBtnActionPerformed(evt);
            }
        });

        centreNameLbl.setText("CENTRE NAME");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(centreInfoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(centreNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(removeStoreBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addStoreBrn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(centreNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(centreInfoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addStoreBrn)
                        .addGap(18, 18, 18)
                        .addComponent(removeStoreBtn)
                        .addGap(0, 39, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void storeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_storeListValueChanged
          
          
    }//GEN-LAST:event_storeListValueChanged

    private void addStoreBrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStoreBrnActionPerformed
        chooseStoreOwner.setVisible(true);
    }//GEN-LAST:event_addStoreBrnActionPerformed

    private void removeStoreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStoreBtnActionPerformed

        removeStore();
        loadValues();
    }//GEN-LAST:event_removeStoreBtnActionPerformed
    private void removeStore(){
         if(storeList.getSelectedValue() == null){
           JOptionPane.showMessageDialog(null,"please select a store");
        }
         else{
            try{
                Statement stmt = db.kobleTil().createStatement();
                int reply = JOptionPane.showConfirmDialog(null,
                        "Are you sure you want to delete " +storeList.getSelectedValue() + "", "", JOptionPane.YES_NO_OPTION);
                String query = "delete from store where store_name = '" + storeList.getSelectedValue().toString() + "' and store.centre_id = " + centreId +""; 
                if(reply == JOptionPane.YES_OPTION){
                 stmt.executeUpdate(query);
                }
            
            }catch(Exception e){
                 System.out.println(e);
            }
         }
        db.kobleFra();
    }
    
    private void addStore(){
        try{
            Statement stmt = db.kobleTil().createStatement();
            
        }catch(Exception e){
        
        }
    }
    private void loadValues(){
       try{
           Statement stmt = db.kobleTil().createStatement();
           DefaultListModel dlm = new DefaultListModel();
           
           res = stmt.executeQuery("select store_name from store where centre_id = " + centreId + "");
           
           centreNameLbl.setText(centreName);
         
 
           while(res.next()){
               
               dlm.addElement(res.getString("store_name"));
               
           }
           
           storeList.setModel(dlm);
       }catch(Exception e){
           System.out.println(e);
       } 
       db.kobleFra();
    }
    public void loadStoreOwners(){
        try{
            Statement stmt = db.kobleTil().createStatement();
            DefaultListModel dlm = new DefaultListModel();
            
        }catch(Exception e){
        
        }
    }
    /**
     * @param args the command line arguments
     */
    public void run() {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CentreManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CentreManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CentreManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CentreManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CentreManager(username).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStoreBrn;
    private javax.swing.JTextField centreInfoBox;
    private javax.swing.JLabel centreNameLbl;
    private javax.swing.JFrame chooseStoreOwner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeStoreBtn;
    private javax.swing.JList storeList;
    // End of variables declaration//GEN-END:variables
}
